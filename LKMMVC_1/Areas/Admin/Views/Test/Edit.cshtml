@model NewsViewModel

@{
    ViewBag.Title = "Koreguoti";
}
@section beginningscripts
    {
    @*datepiker stilius*@
    <link href="~/Content/plugins/datepicker/css/bootstrap-datepicker3.css" rel="stylesheet" />
    <script src="~/Content/plugins/ckeditor/ckeditor.js"></script>
}

<h2>Koreguoti</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>NewsViewModel</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.NewsID)

    <div class="form-group">
        @Html.LabelFor(model => model.PostDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PostDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PostDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <input id="NewsPhotoID" name="NewsPhotoID" value="4" />
        @*<input id="NewsPhotos" name="NewsPhotos" value="2" />*@
        @*<input id="NewsPhotos[0].PhotoLocation" name="NewsPhotos[0].PhotoLocation" value="rrr" />
        <input id="NewsPhotos[1].PhotoLocation" name="NewsPhotos[1].PhotoLocation" value="ttt" />*@

    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.NewsPhotos, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">




            @*@Html.LabelFor(model => model.NewsPhotos.FirstOrDefault().IsChecked, htmlAttributes: new { @class = "control-label col-md-2" })
            @{ var test = Model.NewsPhotos.ToArray(); }
            @for (int i = 0; i < test.Count(); i++)
            {
                @Html.TextBoxFor(x => test[i].IsChecked)
            }*@



            @if (Model.NewsPhotos.Count == 0)
            {

                <input id="NewsPhotoDetails" name="NewsPhotos" class="form-control" type="file" multiple="multiple" />
                <div class="text-danger">@ViewBag.ResultMessage</div>
                @Html.ValidationMessageFor(model => model.NewsPhotos, "", new { @class = "text-danger" })
            }
            else
            {
                <table class="table table-condensed">

                    @foreach (var NewsPhotos in Model.NewsPhotos)
                    {
                        <tr>
                            <td width="5%">
                                @Html.DisplayFor(modelItem => NewsPhotos.FileName)
                            </td>
                            <td width="30%">
                                <input id=@NewsPhotos.NewsPhotoDetailID name="NewsPhotoDetails" class="form-control" type="file" />
                                @*@Html.CheckBox(item.NewsPhotoDetailID.ToString(), false) Šalinti nuotrauką?*@
                                @*@Html.CheckBoxFor(x => NewsPhotos.IsChecked, htmlAttributes: new { name = "NewsPhotos[0].IsChecked" }) Šalinti nuotrauką?*@

                            </td>
                            <td>
                                <img src=@Url.Content("~/"+@NewsPhotos.PhotoLocationThumb+"/"+NewsPhotos.FileName) />
                            </td>

                        </tr>
                    }

                </table>
            }

            <div class="text-danger">@ViewBag.ResultMessage</div>
            @Html.ValidationMessageFor(model => model.NewsPhotos, "", new { @class = "text-danger" })





            <table class="table table-condensed">
                @{ var test = Model.NewsPhotos.ToArray(); }
                @for (int i =0; i<test.Count();i++)
                {
                    <tr>
                        <td width="5%">
                            @Html.DisplayFor(modelItem => test[i].FileName)
                            @*@Html.Hidden("NewsPhotos[" + i + "].NewsPhotoDetailID")*@
                            <input id="@i" name="NewsPhotos[@i].NewsPhotoDetailID" value="uuu" />
                        </td>
                        <td width="30%">
                            @Html.CheckBox("NewsPhotos[" + i + "].IsChecked", test[i].IsChecked) Šalinti nuotrauką?
                            <input id="@i" name="NewsPhotos[@i].PhotoLocation" value="rrr" />
                        </td>
                        <td>
                            <img src=@Url.Content("~/"+test[i].PhotoLocationThumb+"/"+test[i].FileName) />
                        </td>

                    </tr>
                }

            </table>







        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Į pradžią", "Index")
</div>


@section scripts
    {
    <script src="~/Content/plugins/datepicker/js/bootstrap-datepicker.js"></script>
    <script src="~/Content/plugins/datepicker/locales/bootstrap-datepicker.lt.min.js"></script>
    <script>
        //RichTextEditor configuracija nustatoma kokios norime, ji yra faile ckeditor_config.js
        CKEDITOR.replace('Content', {
            customConfig: '/Content/plugins/ckeditor/custom_config/ckeditor_config.js',

        });

        $('#PostDate').datepicker({
            format: "yyyy-mm-dd " + @DateTime.Now.Hour + ":" +@DateTime.Now.Minute,
            weekStart: 1,
            todayBtn: "linked",
            clearBtn: true,
            daysOfWeekHighlighted: "0,6",
            autoclose: true,
            todayHighlight: true,
            language: 'lt'
        });

    </script>
}
